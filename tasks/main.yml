-   name: test for variables
    fail:
        msg: "{{pmcs_loop_variables}} is not defined"
    when: pmcs_loop_variables not in vars
    with_items:
    -   pmcs_members
    -   pmcs_authkey
    loop_control:
        loop_var: pmcs_loop_variables

-   name: install os
    include: "{{item}}"
    with_first_found:
    -   "install-{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    -   "install-{{ ansible_distribution }}-{{ ansible_distribution_version}}.yml"
    -   "install-{{ ansible_distribution }}.yml"

-   name: enable services
    service:
        name: "{{item}}"
        enabled: yes
    with_items:
    -   corosync
    -   pacemaker

-   name: log directory
    file:
        path: /var/log/corosync
        state: directory
        owner: root
        group: root
        mode: 0755

-   name: template configuration
    template:
        src: corosync.conf.j2
        dest: /etc/corosync/corosync.conf
    register: out_pmcs_configuration

-   name: copy authkey
    copy:
        owner: root
        group: haclient
        mode: 0640
        content: "{{pmcs_authkey}}"
        dest: /etc/corosync/authkey.base64
    register: out_pmcs_authkey

-   name: decode authkey
    shell: |
        base64 -d /etc/corosync/authkey.base64 > /etc/corosync/authkey;
        chown root:haclient /etc/corosync/authkey
        chmod 640 /etc/corosync/authkey
    changed_when: false

-   name: set pmcs_restart fact
    set_fact:
        pmcs_restart: |-
            {{out_pmcs_configuration.changed
              or
              out_pmcs_authkey.changed}}
-   name: restart cluster services
    shell: |
        systemctl restart pacemaker
        systemctl restart corosync
    delegate_to: "{{ item }}"
    when: hostvars[item].pmcs_restart
    run_once: true
    with_items: "{{ pmcs_members|map(attribute='name')|list }}"

-   name: give cluster 30 seconds to settle
    pause:
        seconds: 30
    when: pmcs_restart

-   name: start services
    service:
        name: "{{item}}"
        state: started
    when: |
        out_pmcs_install_packages is defined
        and
        out_pmcs_install_packages.changed
    with_items:
    -   corosync
    -   pacemaker

