-   name: test for variables
    fail:
        msg: "{{pmcs_loop_variables}} is not defined"
    when: pmcs_loop_variables not in vars
    with_items:
    -   pmcs_members
    loop_control:
        loop_var: pmcs_loop_variables

-   name: install os
    include: "{{item}}"
    with_first_found:
    -   "install-{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    -   "install-{{ ansible_distribution }}-{{ ansible_distribution_version}}.yml"
    -   "install-{{ ansible_distribution }}.yml"

-   name: log directory
    file:
        path: /var/log/corosync
        state: directory
        owner: root
        group: root
        mode: 0755

-   name: template configuration
    template:
        src: corosync.conf.j2
        dest: /etc/corosync/corosync.conf
    register: out_pmcs_configuration

-   include: generated_pmcs_authkey.yml
    when: pmcs_authkey is not defined

-   name: write /etc/corosync/authkey
    copy:
        content: "{{pmcs_authkey}}"
        dest: /etc/corosync/authkey
    register: out_write_authkey

-   name: set pmcs_reload, pmcs_installed fact fact
    set_fact:
        pmcs_reload: "{{out_pmcs_configuration is defined and out_pmcs_configuration.changed}}"
        pmcs_restart: "{{out_write_authkey.changed or (out_pmcs_install_packages is defined and out_pmcs_install_packages.changed)}}"

-   name: restart corosync
    service:
        name: corosync
        state: restarted
    when: pmcs_restart

-   name: wait for crm to be responsive
    shell: |
        crm status | grep ^"Current DC"|grep NONE && echo WAIT || true
    retries: 20
    delay: 2
    register: out_crm_wait
    until: |
        "WAIT" not in out_crm_wait.stdout

-   name: reload corosync configuration
    run_once: true
    shell: |
        corosync-cfgtool -R
    when:
    -   pmcs_members|map('extract',hostvars,'pmcs_reload')|select('equalto',True)|list|length > 0

-   name: wait for crm to be responsive
    shell: |
        crm status | grep ^"Current DC"|grep NONE && echo WAIT || true
    retries: 20
    delay: 2
    register: out_crm_wait
    until: |
        "WAIT" not in out_crm_wait.stdout

-   name: give cluster 30 seconds to settle on first start
    pause:
        seconds: 30
    when: pmcs_members|map('extract',hostvars,'pmcs_restart')|select('equalto',True)|list|length == pmcs_members|length

-   name: start, enable services
    service:
        name: "{{item}}"
        state: started
        enabled: yes
    with_items:
    -   corosync
    -   pacemaker
